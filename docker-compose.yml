services:
  prometheus:
    image: prom/prometheus:latest
    container_name: homelab-prometheus
    ports:
      - "9090:9090"
    volumes:
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
      - '--web.external-url=http://localhost:9090'
    configs:
      - source: prometheus_config
        target: /etc/prometheus/prometheus.yml
    networks:
      - monitoring
    restart: unless-stopped

  grafana:
    image: grafana/grafana-oss:latest
    container_name: homelab-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin123}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-worldmap-panel
      - GF_FEATURE_TOGGLES_ENABLE=ngalert
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - monitoring
    restart: unless-stopped
    depends_on:
      - prometheus

  # Optional: Node Exporter for host system monitoring
  node-exporter:
    image: prom/node-exporter:latest
    container_name: homelab-node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - monitoring
    restart: unless-stopped

  # Optional: cAdvisor for container monitoring
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: homelab-cadvisor
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
    privileged: true
    networks:
      - monitoring
    restart: unless-stopped

  # Octopus Energy Usage Exporter
  octopus-exporter:
    image: ghcr.io/josephrpalmer/octopus-usage-exporter:latest
    container_name: homelab-octopus-exporter
    ports:
      - "9120:9120"
    environment:
      - PROM_PORT=9120
      - INTERVAL=300
      - API_KEY=${OCTOPUS_API_KEY}
      - ACCOUNT_NUMBER=${OCTOPUS_ACCOUNT_NUMBER}
      - GAS=True
      - ELECTRIC=True
      - NG_METRICS=True
      - TARIFF_RATES=True
      - TARIFF_REMAINING=True
    networks:
      - monitoring
    restart: unless-stopped

volumes:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

networks:
  monitoring:
    driver: bridge

configs:
  prometheus_config:
    content: |
      global:
        scrape_interval: 15s
        evaluation_interval: 15s
        external_labels:
          cluster: 'homelab'
          replica: 'prometheus-01'

      rule_files:
        # - "alert_rules.yml"
        # - "recording_rules.yml"

      alerting:
        alertmanagers:
          - static_configs:
              - targets:
                # - alertmanager:9093

      scrape_configs:
        # Prometheus itself
        - job_name: 'prometheus'
          static_configs:
            - targets: ['localhost:9090']
          scrape_interval: 5s
          metrics_path: /metrics

        # Node Exporter for host system metrics
        - job_name: 'node-exporter'
          static_configs:
            - targets: ['node-exporter:9100']
          scrape_interval: 15s
          metrics_path: /metrics

        # cAdvisor for container metrics
        - job_name: 'cadvisor'
          static_configs:
            - targets: ['cadvisor:8080']
          scrape_interval: 15s
          metrics_path: /metrics

        # Grafana
        - job_name: 'grafana'
          static_configs:
            - targets: ['grafana:3000']
          scrape_interval: 30s
          metrics_path: /metrics

        # Octopus Energy Usage Exporter
        - job_name: 'octopus-exporter'
          static_configs:
            - targets: ['octopus-exporter:9120']
          scrape_interval: 300s
          metrics_path: /metrics

        # Synology NAS monitoring
        - job_name: 'synology-nas'
          metrics_path: /metrics
          static_configs:
            - targets: ['${SYNOLOGY_IP:-192.168.1.131}:3001']
              labels:
                instance: 'synology-nas'
                service: 'nas'
          scrape_interval: 30s

